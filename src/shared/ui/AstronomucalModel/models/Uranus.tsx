/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/uranus/scene.gltf -t 
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_3: THREE.Mesh;
  };
  materials: {
    moon: THREE.MeshStandardMaterial;
  };
};

export function Uranus(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/uranus/scene.gltf') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0, -1.924, -0.169]}>
          <mesh
            geometry={nodes.Object_3.geometry}
            material={materials.moon}
            position={[-1.258, 0.694, -1.122]}
            scale={1.25}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/uranus/scene.gltf');
